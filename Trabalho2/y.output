Rules never reduced

   25 lista_comandos2: /* empty */


State 31 conflicts: 1 shift/reduce
State 34 conflicts: 1 shift/reduce
State 35 conflicts: 1 reduce/reduce
State 45 conflicts: 1 reduce/reduce
State 77 conflicts: 13 reduce/reduce
State 78 conflicts: 13 reduce/reduce
State 105 conflicts: 2 reduce/reduce
State 106 conflicts: 3 reduce/reduce
State 107 conflicts: 9 reduce/reduce
State 108 conflicts: 9 reduce/reduce
State 109 conflicts: 9 reduce/reduce
State 110 conflicts: 9 reduce/reduce
State 111 conflicts: 9 reduce/reduce
State 112 conflicts: 9 reduce/reduce
State 113 conflicts: 11 reduce/reduce
State 114 conflicts: 11 reduce/reduce
State 115 conflicts: 13 reduce/reduce
State 116 conflicts: 13 reduce/reduce


Grammar

    0 $accept: programa $end

    1 programa: lista_definicoes

    2 lista_definicoes: definicao
    3                 | definicao lista_definicoes

    4 definicao: def_variavel
    5          | def_funcao

    6 def_variavel: TK_ID ':' tipo ';'

    7 lista_def_var: /* empty */
    8              | def_variavel lista_def_var

    9 tipo: tipo_primitivo
   10     | tipo '[' ']'

   11 tipo_primitivo: TK_INT
   12               | TK_FLOAT
   13               | TK_CHAR
   14               | TK_VOID

   15 def_funcao: TK_ID '(' parametros ')' ':' tipo bloco

   16 parametros: lista_params
   17           | /* empty */

   18 lista_params: parametro
   19             | parametro ',' parametros

   20 parametro: TK_ID ':' tipo

   21 bloco: '{' lista_def_var lista_comandos '}'

   22 lista_comandos: lista_comandos2
   23               | /* empty */

   24 lista_comandos2: comando lista_comandos
   25                | /* empty */

   26 comando: bloco
   27        | '@' expressao ';'
   28        | TK_RETURN expressao ';'
   29        | TK_RETURN ';'
   30        | variavel '=' expressao ';'
   31        | TK_IF expressao bloco
   32        | TK_IF expressao bloco TK_ELSE bloco
   33        | TK_WHILE expressao bloco

   34 variavel: TK_ID
   35         | variavel '[' expressao ']'

   36 chamada: TK_ID '(' expressoes ')'

   37 expressoes: lista_exp
   38           | /* empty */

   39 lista_exp: expressao
   40          | expressao ',' lista_exp

   41 expressao: expOr

   42 expOr: expOr TK_OR expAnd
   43      | expAnd

   44 expAnd: expCmp
   45       | expAnd TK_AND expCmp

   46 expCmp: expCmp TK_EQUAL expAdd
   47       | expCmp TK_NOTEQUAL expAdd
   48       | expCmp TK_LESSEQUAL expAdd
   49       | expCmp TK_GREATEREQUAL expAdd
   50       | expCmp '<' expAdd
   51       | expCmp '>' expAdd
   52       | expAdd

   53 expAdd: expAdd '+' expMult
   54       | expAdd '-' expMult
   55       | expMult

   56 expMult: expMult '*' expUnaria
   57        | expMult '/' expUnaria
   58        | expUnaria

   59 expUnaria: expressao_base
   60          | '-' expressao_base
   61          | '!' expressao_base

   62 expressao_base: TK_DEC
   63               | TK_REAL
   64               | TK_STRING
   65               | variavel
   66               | '(' expressao ')'
   67               | chamada
   68               | expressao TK_AS tipo
   69               | TK_NEW tipo '[' expressao ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 61
'(' (40) 15 36 66
')' (41) 15 36 66
'*' (42) 56
'+' (43) 53
',' (44) 19 40
'-' (45) 54 60
'/' (47) 57
':' (58) 6 15 20
';' (59) 6 27 28 29 30
'<' (60) 50
'=' (61) 30
'>' (62) 51
'@' (64) 27
'[' (91) 10 35 69
']' (93) 10 35 69
'{' (123) 21
'}' (125) 21
error (256)
TK_INT (258) 11
TK_FLOAT (259) 12
TK_CHAR (260) 13
TK_VOID (261) 14
TK_NEW (262) 69
TK_IF (263) 31 32
TK_ELSE (264) 32
TK_WHILE (265) 33
TK_AS (266) 68
TK_RETURN (267) 28 29
TK_DEC (268) 62
TK_REAL (269) 63
TK_ID (270) 6 15 20 34 36
TK_EQUAL (271) 46
TK_NOTEQUAL (272) 47
TK_LESSEQUAL (273) 48
TK_GREATEREQUAL (274) 49
TK_AND (275) 45
TK_OR (276) 42
TK_STRING (277) 64


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
programa (42)
    on left: 1, on right: 0
lista_definicoes (43)
    on left: 2 3, on right: 1 3
definicao (44)
    on left: 4 5, on right: 2 3
def_variavel (45)
    on left: 6, on right: 4 8
lista_def_var (46)
    on left: 7 8, on right: 8 21
tipo (47)
    on left: 9 10, on right: 6 10 15 20 68 69
tipo_primitivo (48)
    on left: 11 12 13 14, on right: 9
def_funcao (49)
    on left: 15, on right: 5
parametros (50)
    on left: 16 17, on right: 15 19
lista_params (51)
    on left: 18 19, on right: 16
parametro (52)
    on left: 20, on right: 18 19
bloco (53)
    on left: 21, on right: 15 26 31 32 33
lista_comandos (54)
    on left: 22 23, on right: 21 24
lista_comandos2 (55)
    on left: 24 25, on right: 22
comando (56)
    on left: 26 27 28 29 30 31 32 33, on right: 24
variavel (57)
    on left: 34 35, on right: 30 35 65
chamada (58)
    on left: 36, on right: 67
expressoes (59)
    on left: 37 38, on right: 36
lista_exp (60)
    on left: 39 40, on right: 37 40
expressao (61)
    on left: 41, on right: 27 28 30 31 32 33 35 39 40 66 68 69
expOr (62)
    on left: 42 43, on right: 41 42
expAnd (63)
    on left: 44 45, on right: 42 43 45
expCmp (64)
    on left: 46 47 48 49 50 51 52, on right: 44 45 46 47 48 49 50 51
expAdd (65)
    on left: 53 54 55, on right: 46 47 48 49 50 51 52 53 54
expMult (66)
    on left: 56 57 58, on right: 53 54 55 56 57
expUnaria (67)
    on left: 59 60 61, on right: 56 57 58
expressao_base (68)
    on left: 62 63 64 65 66 67 68 69, on right: 59 60 61


state 0

    0 $accept: . programa $end

    TK_ID  shift, and go to state 1

    programa          go to state 2
    lista_definicoes  go to state 3
    definicao         go to state 4
    def_variavel      go to state 5
    def_funcao        go to state 6


state 1

    6 def_variavel: TK_ID . ':' tipo ';'
   15 def_funcao: TK_ID . '(' parametros ')' ':' tipo bloco

    ':'  shift, and go to state 7
    '('  shift, and go to state 8


state 2

    0 $accept: programa . $end

    $end  shift, and go to state 9


state 3

    1 programa: lista_definicoes .

    $default  reduce using rule 1 (programa)


state 4

    2 lista_definicoes: definicao .
    3                 | definicao . lista_definicoes

    TK_ID  shift, and go to state 1

    $default  reduce using rule 2 (lista_definicoes)

    lista_definicoes  go to state 10
    definicao         go to state 4
    def_variavel      go to state 5
    def_funcao        go to state 6


state 5

    4 definicao: def_variavel .

    $default  reduce using rule 4 (definicao)


state 6

    5 definicao: def_funcao .

    $default  reduce using rule 5 (definicao)


state 7

    6 def_variavel: TK_ID ':' . tipo ';'

    TK_INT    shift, and go to state 11
    TK_FLOAT  shift, and go to state 12
    TK_CHAR   shift, and go to state 13
    TK_VOID   shift, and go to state 14

    tipo            go to state 15
    tipo_primitivo  go to state 16


state 8

   15 def_funcao: TK_ID '(' . parametros ')' ':' tipo bloco

    TK_ID  shift, and go to state 17

    $default  reduce using rule 17 (parametros)

    parametros    go to state 18
    lista_params  go to state 19
    parametro     go to state 20


state 9

    0 $accept: programa $end .

    $default  accept


state 10

    3 lista_definicoes: definicao lista_definicoes .

    $default  reduce using rule 3 (lista_definicoes)


state 11

   11 tipo_primitivo: TK_INT .

    $default  reduce using rule 11 (tipo_primitivo)


state 12

   12 tipo_primitivo: TK_FLOAT .

    $default  reduce using rule 12 (tipo_primitivo)


state 13

   13 tipo_primitivo: TK_CHAR .

    $default  reduce using rule 13 (tipo_primitivo)


state 14

   14 tipo_primitivo: TK_VOID .

    $default  reduce using rule 14 (tipo_primitivo)


state 15

    6 def_variavel: TK_ID ':' tipo . ';'
   10 tipo: tipo . '[' ']'

    ';'  shift, and go to state 21
    '['  shift, and go to state 22


state 16

    9 tipo: tipo_primitivo .

    $default  reduce using rule 9 (tipo)


state 17

   20 parametro: TK_ID . ':' tipo

    ':'  shift, and go to state 23


state 18

   15 def_funcao: TK_ID '(' parametros . ')' ':' tipo bloco

    ')'  shift, and go to state 24


state 19

   16 parametros: lista_params .

    $default  reduce using rule 16 (parametros)


state 20

   18 lista_params: parametro .
   19             | parametro . ',' parametros

    ','  shift, and go to state 25

    $default  reduce using rule 18 (lista_params)


state 21

    6 def_variavel: TK_ID ':' tipo ';' .

    $default  reduce using rule 6 (def_variavel)


state 22

   10 tipo: tipo '[' . ']'

    ']'  shift, and go to state 26


state 23

   20 parametro: TK_ID ':' . tipo

    TK_INT    shift, and go to state 11
    TK_FLOAT  shift, and go to state 12
    TK_CHAR   shift, and go to state 13
    TK_VOID   shift, and go to state 14

    tipo            go to state 27
    tipo_primitivo  go to state 16


state 24

   15 def_funcao: TK_ID '(' parametros ')' . ':' tipo bloco

    ':'  shift, and go to state 28


state 25

   19 lista_params: parametro ',' . parametros

    TK_ID  shift, and go to state 17

    $default  reduce using rule 17 (parametros)

    parametros    go to state 29
    lista_params  go to state 19
    parametro     go to state 20


state 26

   10 tipo: tipo '[' ']' .

    $default  reduce using rule 10 (tipo)


state 27

   10 tipo: tipo . '[' ']'
   20 parametro: TK_ID ':' tipo .

    '['  shift, and go to state 22

    $default  reduce using rule 20 (parametro)


state 28

   15 def_funcao: TK_ID '(' parametros ')' ':' . tipo bloco

    TK_INT    shift, and go to state 11
    TK_FLOAT  shift, and go to state 12
    TK_CHAR   shift, and go to state 13
    TK_VOID   shift, and go to state 14

    tipo            go to state 30
    tipo_primitivo  go to state 16


state 29

   19 lista_params: parametro ',' parametros .

    $default  reduce using rule 19 (lista_params)


state 30

   10 tipo: tipo . '[' ']'
   15 def_funcao: TK_ID '(' parametros ')' ':' tipo . bloco

    '['  shift, and go to state 22
    '{'  shift, and go to state 31

    bloco  go to state 32


state 31

   21 bloco: '{' . lista_def_var lista_comandos '}'

    TK_ID  shift, and go to state 33

    TK_ID     [reduce using rule 7 (lista_def_var)]
    $default  reduce using rule 7 (lista_def_var)

    def_variavel   go to state 34
    lista_def_var  go to state 35


state 32

   15 def_funcao: TK_ID '(' parametros ')' ':' tipo bloco .

    $default  reduce using rule 15 (def_funcao)


state 33

    6 def_variavel: TK_ID . ':' tipo ';'

    ':'  shift, and go to state 7


state 34

    8 lista_def_var: def_variavel . lista_def_var

    TK_ID  shift, and go to state 33

    TK_ID     [reduce using rule 7 (lista_def_var)]
    $default  reduce using rule 7 (lista_def_var)

    def_variavel   go to state 34
    lista_def_var  go to state 36


state 35

   21 bloco: '{' lista_def_var . lista_comandos '}'

    TK_IF      shift, and go to state 37
    TK_WHILE   shift, and go to state 38
    TK_RETURN  shift, and go to state 39
    TK_ID      shift, and go to state 40
    '{'        shift, and go to state 31
    '@'        shift, and go to state 41

    '}'       reduce using rule 23 (lista_comandos)
    '}'       [reduce using rule 25 (lista_comandos2)]
    $default  reduce using rule 23 (lista_comandos)

    bloco            go to state 42
    lista_comandos   go to state 43
    lista_comandos2  go to state 44
    comando          go to state 45
    variavel         go to state 46


state 36

    8 lista_def_var: def_variavel lista_def_var .

    $default  reduce using rule 8 (lista_def_var)


state 37

   31 comando: TK_IF . expressao bloco
   32        | TK_IF . expressao bloco TK_ELSE bloco

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 57
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 38

   33 comando: TK_WHILE . expressao bloco

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 65
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 39

   28 comando: TK_RETURN . expressao ';'
   29        | TK_RETURN . ';'

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    ';'        shift, and go to state 66
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 67
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 40

   34 variavel: TK_ID .

    $default  reduce using rule 34 (variavel)


state 41

   27 comando: '@' . expressao ';'

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 68
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 42

   26 comando: bloco .

    $default  reduce using rule 26 (comando)


state 43

   21 bloco: '{' lista_def_var lista_comandos . '}'

    '}'  shift, and go to state 69


state 44

   22 lista_comandos: lista_comandos2 .

    $default  reduce using rule 22 (lista_comandos)


state 45

   24 lista_comandos2: comando . lista_comandos

    TK_IF      shift, and go to state 37
    TK_WHILE   shift, and go to state 38
    TK_RETURN  shift, and go to state 39
    TK_ID      shift, and go to state 40
    '{'        shift, and go to state 31
    '@'        shift, and go to state 41

    '}'       reduce using rule 23 (lista_comandos)
    '}'       [reduce using rule 25 (lista_comandos2)]
    $default  reduce using rule 23 (lista_comandos)

    bloco            go to state 42
    lista_comandos   go to state 70
    lista_comandos2  go to state 44
    comando          go to state 45
    variavel         go to state 46


state 46

   30 comando: variavel . '=' expressao ';'
   35 variavel: variavel . '[' expressao ']'

    '['  shift, and go to state 71
    '='  shift, and go to state 72


state 47

   69 expressao_base: TK_NEW . tipo '[' expressao ']'

    TK_INT    shift, and go to state 11
    TK_FLOAT  shift, and go to state 12
    TK_CHAR   shift, and go to state 13
    TK_VOID   shift, and go to state 14

    tipo            go to state 73
    tipo_primitivo  go to state 16


state 48

   62 expressao_base: TK_DEC .

    $default  reduce using rule 62 (expressao_base)


state 49

   63 expressao_base: TK_REAL .

    $default  reduce using rule 63 (expressao_base)


state 50

   34 variavel: TK_ID .
   36 chamada: TK_ID . '(' expressoes ')'

    '('  shift, and go to state 74

    $default  reduce using rule 34 (variavel)


state 51

   64 expressao_base: TK_STRING .

    $default  reduce using rule 64 (expressao_base)


state 52

   66 expressao_base: '(' . expressao ')'

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 75
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 53

   60 expUnaria: '-' . expressao_base

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 76
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 77


state 54

   61 expUnaria: '!' . expressao_base

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 76
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 78


state 55

   35 variavel: variavel . '[' expressao ']'
   65 expressao_base: variavel .

    '['  shift, and go to state 71

    $default  reduce using rule 65 (expressao_base)


state 56

   67 expressao_base: chamada .

    $default  reduce using rule 67 (expressao_base)


state 57

   31 comando: TK_IF expressao . bloco
   32        | TK_IF expressao . bloco TK_ELSE bloco
   68 expressao_base: expressao . TK_AS tipo

    TK_AS  shift, and go to state 79
    '{'    shift, and go to state 31

    bloco  go to state 80


state 58

   41 expressao: expOr .
   42 expOr: expOr . TK_OR expAnd

    TK_OR  shift, and go to state 81

    $default  reduce using rule 41 (expressao)


state 59

   43 expOr: expAnd .
   45 expAnd: expAnd . TK_AND expCmp

    TK_AND  shift, and go to state 82

    $default  reduce using rule 43 (expOr)


state 60

   44 expAnd: expCmp .
   46 expCmp: expCmp . TK_EQUAL expAdd
   47       | expCmp . TK_NOTEQUAL expAdd
   48       | expCmp . TK_LESSEQUAL expAdd
   49       | expCmp . TK_GREATEREQUAL expAdd
   50       | expCmp . '<' expAdd
   51       | expCmp . '>' expAdd

    TK_EQUAL         shift, and go to state 83
    TK_NOTEQUAL      shift, and go to state 84
    TK_LESSEQUAL     shift, and go to state 85
    TK_GREATEREQUAL  shift, and go to state 86
    '<'              shift, and go to state 87
    '>'              shift, and go to state 88

    $default  reduce using rule 44 (expAnd)


state 61

   52 expCmp: expAdd .
   53 expAdd: expAdd . '+' expMult
   54       | expAdd . '-' expMult

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90

    $default  reduce using rule 52 (expCmp)


state 62

   55 expAdd: expMult .
   56 expMult: expMult . '*' expUnaria
   57        | expMult . '/' expUnaria

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 55 (expAdd)


state 63

   58 expMult: expUnaria .

    $default  reduce using rule 58 (expMult)


state 64

   59 expUnaria: expressao_base .

    $default  reduce using rule 59 (expUnaria)


state 65

   33 comando: TK_WHILE expressao . bloco
   68 expressao_base: expressao . TK_AS tipo

    TK_AS  shift, and go to state 79
    '{'    shift, and go to state 31

    bloco  go to state 93


state 66

   29 comando: TK_RETURN ';' .

    $default  reduce using rule 29 (comando)


state 67

   28 comando: TK_RETURN expressao . ';'
   68 expressao_base: expressao . TK_AS tipo

    TK_AS  shift, and go to state 79
    ';'    shift, and go to state 94


state 68

   27 comando: '@' expressao . ';'
   68 expressao_base: expressao . TK_AS tipo

    TK_AS  shift, and go to state 79
    ';'    shift, and go to state 95


state 69

   21 bloco: '{' lista_def_var lista_comandos '}' .

    $default  reduce using rule 21 (bloco)


state 70

   24 lista_comandos2: comando lista_comandos .

    $default  reduce using rule 24 (lista_comandos2)


state 71

   35 variavel: variavel '[' . expressao ']'

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 96
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 72

   30 comando: variavel '=' . expressao ';'

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 97
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 73

   10 tipo: tipo . '[' ']'
   69 expressao_base: TK_NEW tipo . '[' expressao ']'

    '['  shift, and go to state 98


state 74

   36 chamada: TK_ID '(' . expressoes ')'

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    $default  reduce using rule 38 (expressoes)

    variavel        go to state 55
    chamada         go to state 56
    expressoes      go to state 99
    lista_exp       go to state 100
    expressao       go to state 101
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 75

   66 expressao_base: '(' expressao . ')'
   68               | expressao . TK_AS tipo

    TK_AS  shift, and go to state 79
    ')'    shift, and go to state 102


state 76

   68 expressao_base: expressao . TK_AS tipo

    TK_AS  shift, and go to state 79


state 77

   59 expUnaria: expressao_base .
   60          | '-' expressao_base .

    TK_AS            reduce using rule 59 (expUnaria)
    TK_AS            [reduce using rule 60 (expUnaria)]
    TK_EQUAL         reduce using rule 59 (expUnaria)
    TK_EQUAL         [reduce using rule 60 (expUnaria)]
    TK_NOTEQUAL      reduce using rule 59 (expUnaria)
    TK_NOTEQUAL      [reduce using rule 60 (expUnaria)]
    TK_LESSEQUAL     reduce using rule 59 (expUnaria)
    TK_LESSEQUAL     [reduce using rule 60 (expUnaria)]
    TK_GREATEREQUAL  reduce using rule 59 (expUnaria)
    TK_GREATEREQUAL  [reduce using rule 60 (expUnaria)]
    TK_AND           reduce using rule 59 (expUnaria)
    TK_AND           [reduce using rule 60 (expUnaria)]
    TK_OR            reduce using rule 59 (expUnaria)
    TK_OR            [reduce using rule 60 (expUnaria)]
    ';'              reduce using rule 60 (expUnaria)
    ']'              reduce using rule 60 (expUnaria)
    ')'              reduce using rule 60 (expUnaria)
    ','              reduce using rule 60 (expUnaria)
    '{'              reduce using rule 60 (expUnaria)
    '<'              reduce using rule 59 (expUnaria)
    '<'              [reduce using rule 60 (expUnaria)]
    '>'              reduce using rule 59 (expUnaria)
    '>'              [reduce using rule 60 (expUnaria)]
    '+'              reduce using rule 59 (expUnaria)
    '+'              [reduce using rule 60 (expUnaria)]
    '-'              reduce using rule 59 (expUnaria)
    '-'              [reduce using rule 60 (expUnaria)]
    '*'              reduce using rule 59 (expUnaria)
    '*'              [reduce using rule 60 (expUnaria)]
    '/'              reduce using rule 59 (expUnaria)
    '/'              [reduce using rule 60 (expUnaria)]
    $default         reduce using rule 59 (expUnaria)


state 78

   59 expUnaria: expressao_base .
   61          | '!' expressao_base .

    TK_AS            reduce using rule 59 (expUnaria)
    TK_AS            [reduce using rule 61 (expUnaria)]
    TK_EQUAL         reduce using rule 59 (expUnaria)
    TK_EQUAL         [reduce using rule 61 (expUnaria)]
    TK_NOTEQUAL      reduce using rule 59 (expUnaria)
    TK_NOTEQUAL      [reduce using rule 61 (expUnaria)]
    TK_LESSEQUAL     reduce using rule 59 (expUnaria)
    TK_LESSEQUAL     [reduce using rule 61 (expUnaria)]
    TK_GREATEREQUAL  reduce using rule 59 (expUnaria)
    TK_GREATEREQUAL  [reduce using rule 61 (expUnaria)]
    TK_AND           reduce using rule 59 (expUnaria)
    TK_AND           [reduce using rule 61 (expUnaria)]
    TK_OR            reduce using rule 59 (expUnaria)
    TK_OR            [reduce using rule 61 (expUnaria)]
    ';'              reduce using rule 61 (expUnaria)
    ']'              reduce using rule 61 (expUnaria)
    ')'              reduce using rule 61 (expUnaria)
    ','              reduce using rule 61 (expUnaria)
    '{'              reduce using rule 61 (expUnaria)
    '<'              reduce using rule 59 (expUnaria)
    '<'              [reduce using rule 61 (expUnaria)]
    '>'              reduce using rule 59 (expUnaria)
    '>'              [reduce using rule 61 (expUnaria)]
    '+'              reduce using rule 59 (expUnaria)
    '+'              [reduce using rule 61 (expUnaria)]
    '-'              reduce using rule 59 (expUnaria)
    '-'              [reduce using rule 61 (expUnaria)]
    '*'              reduce using rule 59 (expUnaria)
    '*'              [reduce using rule 61 (expUnaria)]
    '/'              reduce using rule 59 (expUnaria)
    '/'              [reduce using rule 61 (expUnaria)]
    $default         reduce using rule 59 (expUnaria)


state 79

   68 expressao_base: expressao TK_AS . tipo

    TK_INT    shift, and go to state 11
    TK_FLOAT  shift, and go to state 12
    TK_CHAR   shift, and go to state 13
    TK_VOID   shift, and go to state 14

    tipo            go to state 103
    tipo_primitivo  go to state 16


state 80

   31 comando: TK_IF expressao bloco .
   32        | TK_IF expressao bloco . TK_ELSE bloco

    TK_ELSE  shift, and go to state 104

    $default  reduce using rule 31 (comando)


state 81

   42 expOr: expOr TK_OR . expAnd

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 76
    expOr           go to state 58
    expAnd          go to state 105
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 82

   45 expAnd: expAnd TK_AND . expCmp

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 76
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 106
    expAdd          go to state 61
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 83

   46 expCmp: expCmp TK_EQUAL . expAdd

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 76
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 107
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 84

   47 expCmp: expCmp TK_NOTEQUAL . expAdd

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 76
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 108
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 85

   48 expCmp: expCmp TK_LESSEQUAL . expAdd

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 76
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 109
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 86

   49 expCmp: expCmp TK_GREATEREQUAL . expAdd

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 76
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 110
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 87

   50 expCmp: expCmp '<' . expAdd

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 76
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 111
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 88

   51 expCmp: expCmp '>' . expAdd

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 76
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 112
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 89

   53 expAdd: expAdd '+' . expMult

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 76
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 113
    expUnaria       go to state 63
    expressao_base  go to state 64


state 90

   54 expAdd: expAdd '-' . expMult

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 76
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 114
    expUnaria       go to state 63
    expressao_base  go to state 64


state 91

   56 expMult: expMult '*' . expUnaria

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 76
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 62
    expUnaria       go to state 115
    expressao_base  go to state 64


state 92

   57 expMult: expMult '/' . expUnaria

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 76
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 62
    expUnaria       go to state 116
    expressao_base  go to state 64


state 93

   33 comando: TK_WHILE expressao bloco .

    $default  reduce using rule 33 (comando)


state 94

   28 comando: TK_RETURN expressao ';' .

    $default  reduce using rule 28 (comando)


state 95

   27 comando: '@' expressao ';' .

    $default  reduce using rule 27 (comando)


state 96

   35 variavel: variavel '[' expressao . ']'
   68 expressao_base: expressao . TK_AS tipo

    TK_AS  shift, and go to state 79
    ']'    shift, and go to state 117


state 97

   30 comando: variavel '=' expressao . ';'
   68 expressao_base: expressao . TK_AS tipo

    TK_AS  shift, and go to state 79
    ';'    shift, and go to state 118


state 98

   10 tipo: tipo '[' . ']'
   69 expressao_base: TK_NEW tipo '[' . expressao ']'

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    ']'        shift, and go to state 26
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    expressao       go to state 119
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 99

   36 chamada: TK_ID '(' expressoes . ')'

    ')'  shift, and go to state 120


state 100

   37 expressoes: lista_exp .

    $default  reduce using rule 37 (expressoes)


state 101

   39 lista_exp: expressao .
   40          | expressao . ',' lista_exp
   68 expressao_base: expressao . TK_AS tipo

    TK_AS  shift, and go to state 79
    ','    shift, and go to state 121

    $default  reduce using rule 39 (lista_exp)


state 102

   66 expressao_base: '(' expressao ')' .

    $default  reduce using rule 66 (expressao_base)


state 103

   10 tipo: tipo . '[' ']'
   68 expressao_base: expressao TK_AS tipo .

    '['  shift, and go to state 22

    $default  reduce using rule 68 (expressao_base)


state 104

   32 comando: TK_IF expressao bloco TK_ELSE . bloco

    '{'  shift, and go to state 31

    bloco  go to state 122


state 105

   42 expOr: expOr TK_OR expAnd .
   43      | expAnd .
   45 expAnd: expAnd . TK_AND expCmp

    TK_AND  shift, and go to state 82

    TK_AS     reduce using rule 42 (expOr)
    TK_AS     [reduce using rule 43 (expOr)]
    TK_OR     reduce using rule 42 (expOr)
    TK_OR     [reduce using rule 43 (expOr)]
    $default  reduce using rule 42 (expOr)


state 106

   44 expAnd: expCmp .
   45       | expAnd TK_AND expCmp .
   46 expCmp: expCmp . TK_EQUAL expAdd
   47       | expCmp . TK_NOTEQUAL expAdd
   48       | expCmp . TK_LESSEQUAL expAdd
   49       | expCmp . TK_GREATEREQUAL expAdd
   50       | expCmp . '<' expAdd
   51       | expCmp . '>' expAdd

    TK_EQUAL         shift, and go to state 83
    TK_NOTEQUAL      shift, and go to state 84
    TK_LESSEQUAL     shift, and go to state 85
    TK_GREATEREQUAL  shift, and go to state 86
    '<'              shift, and go to state 87
    '>'              shift, and go to state 88

    TK_AS     reduce using rule 44 (expAnd)
    TK_AS     [reduce using rule 45 (expAnd)]
    TK_AND    reduce using rule 44 (expAnd)
    TK_AND    [reduce using rule 45 (expAnd)]
    TK_OR     reduce using rule 44 (expAnd)
    TK_OR     [reduce using rule 45 (expAnd)]
    $default  reduce using rule 45 (expAnd)


state 107

   46 expCmp: expCmp TK_EQUAL expAdd .
   52       | expAdd .
   53 expAdd: expAdd . '+' expMult
   54       | expAdd . '-' expMult

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90

    TK_AS            reduce using rule 46 (expCmp)
    TK_AS            [reduce using rule 52 (expCmp)]
    TK_EQUAL         reduce using rule 46 (expCmp)
    TK_EQUAL         [reduce using rule 52 (expCmp)]
    TK_NOTEQUAL      reduce using rule 46 (expCmp)
    TK_NOTEQUAL      [reduce using rule 52 (expCmp)]
    TK_LESSEQUAL     reduce using rule 46 (expCmp)
    TK_LESSEQUAL     [reduce using rule 52 (expCmp)]
    TK_GREATEREQUAL  reduce using rule 46 (expCmp)
    TK_GREATEREQUAL  [reduce using rule 52 (expCmp)]
    TK_AND           reduce using rule 46 (expCmp)
    TK_AND           [reduce using rule 52 (expCmp)]
    TK_OR            reduce using rule 46 (expCmp)
    TK_OR            [reduce using rule 52 (expCmp)]
    '<'              reduce using rule 46 (expCmp)
    '<'              [reduce using rule 52 (expCmp)]
    '>'              reduce using rule 46 (expCmp)
    '>'              [reduce using rule 52 (expCmp)]
    $default         reduce using rule 46 (expCmp)


state 108

   47 expCmp: expCmp TK_NOTEQUAL expAdd .
   52       | expAdd .
   53 expAdd: expAdd . '+' expMult
   54       | expAdd . '-' expMult

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90

    TK_AS            reduce using rule 47 (expCmp)
    TK_AS            [reduce using rule 52 (expCmp)]
    TK_EQUAL         reduce using rule 47 (expCmp)
    TK_EQUAL         [reduce using rule 52 (expCmp)]
    TK_NOTEQUAL      reduce using rule 47 (expCmp)
    TK_NOTEQUAL      [reduce using rule 52 (expCmp)]
    TK_LESSEQUAL     reduce using rule 47 (expCmp)
    TK_LESSEQUAL     [reduce using rule 52 (expCmp)]
    TK_GREATEREQUAL  reduce using rule 47 (expCmp)
    TK_GREATEREQUAL  [reduce using rule 52 (expCmp)]
    TK_AND           reduce using rule 47 (expCmp)
    TK_AND           [reduce using rule 52 (expCmp)]
    TK_OR            reduce using rule 47 (expCmp)
    TK_OR            [reduce using rule 52 (expCmp)]
    '<'              reduce using rule 47 (expCmp)
    '<'              [reduce using rule 52 (expCmp)]
    '>'              reduce using rule 47 (expCmp)
    '>'              [reduce using rule 52 (expCmp)]
    $default         reduce using rule 47 (expCmp)


state 109

   48 expCmp: expCmp TK_LESSEQUAL expAdd .
   52       | expAdd .
   53 expAdd: expAdd . '+' expMult
   54       | expAdd . '-' expMult

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90

    TK_AS            reduce using rule 48 (expCmp)
    TK_AS            [reduce using rule 52 (expCmp)]
    TK_EQUAL         reduce using rule 48 (expCmp)
    TK_EQUAL         [reduce using rule 52 (expCmp)]
    TK_NOTEQUAL      reduce using rule 48 (expCmp)
    TK_NOTEQUAL      [reduce using rule 52 (expCmp)]
    TK_LESSEQUAL     reduce using rule 48 (expCmp)
    TK_LESSEQUAL     [reduce using rule 52 (expCmp)]
    TK_GREATEREQUAL  reduce using rule 48 (expCmp)
    TK_GREATEREQUAL  [reduce using rule 52 (expCmp)]
    TK_AND           reduce using rule 48 (expCmp)
    TK_AND           [reduce using rule 52 (expCmp)]
    TK_OR            reduce using rule 48 (expCmp)
    TK_OR            [reduce using rule 52 (expCmp)]
    '<'              reduce using rule 48 (expCmp)
    '<'              [reduce using rule 52 (expCmp)]
    '>'              reduce using rule 48 (expCmp)
    '>'              [reduce using rule 52 (expCmp)]
    $default         reduce using rule 48 (expCmp)


state 110

   49 expCmp: expCmp TK_GREATEREQUAL expAdd .
   52       | expAdd .
   53 expAdd: expAdd . '+' expMult
   54       | expAdd . '-' expMult

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90

    TK_AS            reduce using rule 49 (expCmp)
    TK_AS            [reduce using rule 52 (expCmp)]
    TK_EQUAL         reduce using rule 49 (expCmp)
    TK_EQUAL         [reduce using rule 52 (expCmp)]
    TK_NOTEQUAL      reduce using rule 49 (expCmp)
    TK_NOTEQUAL      [reduce using rule 52 (expCmp)]
    TK_LESSEQUAL     reduce using rule 49 (expCmp)
    TK_LESSEQUAL     [reduce using rule 52 (expCmp)]
    TK_GREATEREQUAL  reduce using rule 49 (expCmp)
    TK_GREATEREQUAL  [reduce using rule 52 (expCmp)]
    TK_AND           reduce using rule 49 (expCmp)
    TK_AND           [reduce using rule 52 (expCmp)]
    TK_OR            reduce using rule 49 (expCmp)
    TK_OR            [reduce using rule 52 (expCmp)]
    '<'              reduce using rule 49 (expCmp)
    '<'              [reduce using rule 52 (expCmp)]
    '>'              reduce using rule 49 (expCmp)
    '>'              [reduce using rule 52 (expCmp)]
    $default         reduce using rule 49 (expCmp)


state 111

   50 expCmp: expCmp '<' expAdd .
   52       | expAdd .
   53 expAdd: expAdd . '+' expMult
   54       | expAdd . '-' expMult

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90

    TK_AS            reduce using rule 50 (expCmp)
    TK_AS            [reduce using rule 52 (expCmp)]
    TK_EQUAL         reduce using rule 50 (expCmp)
    TK_EQUAL         [reduce using rule 52 (expCmp)]
    TK_NOTEQUAL      reduce using rule 50 (expCmp)
    TK_NOTEQUAL      [reduce using rule 52 (expCmp)]
    TK_LESSEQUAL     reduce using rule 50 (expCmp)
    TK_LESSEQUAL     [reduce using rule 52 (expCmp)]
    TK_GREATEREQUAL  reduce using rule 50 (expCmp)
    TK_GREATEREQUAL  [reduce using rule 52 (expCmp)]
    TK_AND           reduce using rule 50 (expCmp)
    TK_AND           [reduce using rule 52 (expCmp)]
    TK_OR            reduce using rule 50 (expCmp)
    TK_OR            [reduce using rule 52 (expCmp)]
    '<'              reduce using rule 50 (expCmp)
    '<'              [reduce using rule 52 (expCmp)]
    '>'              reduce using rule 50 (expCmp)
    '>'              [reduce using rule 52 (expCmp)]
    $default         reduce using rule 50 (expCmp)


state 112

   51 expCmp: expCmp '>' expAdd .
   52       | expAdd .
   53 expAdd: expAdd . '+' expMult
   54       | expAdd . '-' expMult

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90

    TK_AS            reduce using rule 51 (expCmp)
    TK_AS            [reduce using rule 52 (expCmp)]
    TK_EQUAL         reduce using rule 51 (expCmp)
    TK_EQUAL         [reduce using rule 52 (expCmp)]
    TK_NOTEQUAL      reduce using rule 51 (expCmp)
    TK_NOTEQUAL      [reduce using rule 52 (expCmp)]
    TK_LESSEQUAL     reduce using rule 51 (expCmp)
    TK_LESSEQUAL     [reduce using rule 52 (expCmp)]
    TK_GREATEREQUAL  reduce using rule 51 (expCmp)
    TK_GREATEREQUAL  [reduce using rule 52 (expCmp)]
    TK_AND           reduce using rule 51 (expCmp)
    TK_AND           [reduce using rule 52 (expCmp)]
    TK_OR            reduce using rule 51 (expCmp)
    TK_OR            [reduce using rule 52 (expCmp)]
    '<'              reduce using rule 51 (expCmp)
    '<'              [reduce using rule 52 (expCmp)]
    '>'              reduce using rule 51 (expCmp)
    '>'              [reduce using rule 52 (expCmp)]
    $default         reduce using rule 51 (expCmp)


state 113

   53 expAdd: expAdd '+' expMult .
   55       | expMult .
   56 expMult: expMult . '*' expUnaria
   57        | expMult . '/' expUnaria

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    TK_AS            reduce using rule 53 (expAdd)
    TK_AS            [reduce using rule 55 (expAdd)]
    TK_EQUAL         reduce using rule 53 (expAdd)
    TK_EQUAL         [reduce using rule 55 (expAdd)]
    TK_NOTEQUAL      reduce using rule 53 (expAdd)
    TK_NOTEQUAL      [reduce using rule 55 (expAdd)]
    TK_LESSEQUAL     reduce using rule 53 (expAdd)
    TK_LESSEQUAL     [reduce using rule 55 (expAdd)]
    TK_GREATEREQUAL  reduce using rule 53 (expAdd)
    TK_GREATEREQUAL  [reduce using rule 55 (expAdd)]
    TK_AND           reduce using rule 53 (expAdd)
    TK_AND           [reduce using rule 55 (expAdd)]
    TK_OR            reduce using rule 53 (expAdd)
    TK_OR            [reduce using rule 55 (expAdd)]
    '<'              reduce using rule 53 (expAdd)
    '<'              [reduce using rule 55 (expAdd)]
    '>'              reduce using rule 53 (expAdd)
    '>'              [reduce using rule 55 (expAdd)]
    '+'              reduce using rule 53 (expAdd)
    '+'              [reduce using rule 55 (expAdd)]
    '-'              reduce using rule 53 (expAdd)
    '-'              [reduce using rule 55 (expAdd)]
    $default         reduce using rule 53 (expAdd)


state 114

   54 expAdd: expAdd '-' expMult .
   55       | expMult .
   56 expMult: expMult . '*' expUnaria
   57        | expMult . '/' expUnaria

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    TK_AS            reduce using rule 54 (expAdd)
    TK_AS            [reduce using rule 55 (expAdd)]
    TK_EQUAL         reduce using rule 54 (expAdd)
    TK_EQUAL         [reduce using rule 55 (expAdd)]
    TK_NOTEQUAL      reduce using rule 54 (expAdd)
    TK_NOTEQUAL      [reduce using rule 55 (expAdd)]
    TK_LESSEQUAL     reduce using rule 54 (expAdd)
    TK_LESSEQUAL     [reduce using rule 55 (expAdd)]
    TK_GREATEREQUAL  reduce using rule 54 (expAdd)
    TK_GREATEREQUAL  [reduce using rule 55 (expAdd)]
    TK_AND           reduce using rule 54 (expAdd)
    TK_AND           [reduce using rule 55 (expAdd)]
    TK_OR            reduce using rule 54 (expAdd)
    TK_OR            [reduce using rule 55 (expAdd)]
    '<'              reduce using rule 54 (expAdd)
    '<'              [reduce using rule 55 (expAdd)]
    '>'              reduce using rule 54 (expAdd)
    '>'              [reduce using rule 55 (expAdd)]
    '+'              reduce using rule 54 (expAdd)
    '+'              [reduce using rule 55 (expAdd)]
    '-'              reduce using rule 54 (expAdd)
    '-'              [reduce using rule 55 (expAdd)]
    $default         reduce using rule 54 (expAdd)


state 115

   56 expMult: expMult '*' expUnaria .
   58        | expUnaria .

    TK_AS            reduce using rule 56 (expMult)
    TK_AS            [reduce using rule 58 (expMult)]
    TK_EQUAL         reduce using rule 56 (expMult)
    TK_EQUAL         [reduce using rule 58 (expMult)]
    TK_NOTEQUAL      reduce using rule 56 (expMult)
    TK_NOTEQUAL      [reduce using rule 58 (expMult)]
    TK_LESSEQUAL     reduce using rule 56 (expMult)
    TK_LESSEQUAL     [reduce using rule 58 (expMult)]
    TK_GREATEREQUAL  reduce using rule 56 (expMult)
    TK_GREATEREQUAL  [reduce using rule 58 (expMult)]
    TK_AND           reduce using rule 56 (expMult)
    TK_AND           [reduce using rule 58 (expMult)]
    TK_OR            reduce using rule 56 (expMult)
    TK_OR            [reduce using rule 58 (expMult)]
    '<'              reduce using rule 56 (expMult)
    '<'              [reduce using rule 58 (expMult)]
    '>'              reduce using rule 56 (expMult)
    '>'              [reduce using rule 58 (expMult)]
    '+'              reduce using rule 56 (expMult)
    '+'              [reduce using rule 58 (expMult)]
    '-'              reduce using rule 56 (expMult)
    '-'              [reduce using rule 58 (expMult)]
    '*'              reduce using rule 56 (expMult)
    '*'              [reduce using rule 58 (expMult)]
    '/'              reduce using rule 56 (expMult)
    '/'              [reduce using rule 58 (expMult)]
    $default         reduce using rule 56 (expMult)


state 116

   57 expMult: expMult '/' expUnaria .
   58        | expUnaria .

    TK_AS            reduce using rule 57 (expMult)
    TK_AS            [reduce using rule 58 (expMult)]
    TK_EQUAL         reduce using rule 57 (expMult)
    TK_EQUAL         [reduce using rule 58 (expMult)]
    TK_NOTEQUAL      reduce using rule 57 (expMult)
    TK_NOTEQUAL      [reduce using rule 58 (expMult)]
    TK_LESSEQUAL     reduce using rule 57 (expMult)
    TK_LESSEQUAL     [reduce using rule 58 (expMult)]
    TK_GREATEREQUAL  reduce using rule 57 (expMult)
    TK_GREATEREQUAL  [reduce using rule 58 (expMult)]
    TK_AND           reduce using rule 57 (expMult)
    TK_AND           [reduce using rule 58 (expMult)]
    TK_OR            reduce using rule 57 (expMult)
    TK_OR            [reduce using rule 58 (expMult)]
    '<'              reduce using rule 57 (expMult)
    '<'              [reduce using rule 58 (expMult)]
    '>'              reduce using rule 57 (expMult)
    '>'              [reduce using rule 58 (expMult)]
    '+'              reduce using rule 57 (expMult)
    '+'              [reduce using rule 58 (expMult)]
    '-'              reduce using rule 57 (expMult)
    '-'              [reduce using rule 58 (expMult)]
    '*'              reduce using rule 57 (expMult)
    '*'              [reduce using rule 58 (expMult)]
    '/'              reduce using rule 57 (expMult)
    '/'              [reduce using rule 58 (expMult)]
    $default         reduce using rule 57 (expMult)


state 117

   35 variavel: variavel '[' expressao ']' .

    $default  reduce using rule 35 (variavel)


state 118

   30 comando: variavel '=' expressao ';' .

    $default  reduce using rule 30 (comando)


state 119

   68 expressao_base: expressao . TK_AS tipo
   69               | TK_NEW tipo '[' expressao . ']'

    TK_AS  shift, and go to state 79
    ']'    shift, and go to state 123


state 120

   36 chamada: TK_ID '(' expressoes ')' .

    $default  reduce using rule 36 (chamada)


state 121

   40 lista_exp: expressao ',' . lista_exp

    TK_NEW     shift, and go to state 47
    TK_DEC     shift, and go to state 48
    TK_REAL    shift, and go to state 49
    TK_ID      shift, and go to state 50
    TK_STRING  shift, and go to state 51
    '('        shift, and go to state 52
    '-'        shift, and go to state 53
    '!'        shift, and go to state 54

    variavel        go to state 55
    chamada         go to state 56
    lista_exp       go to state 124
    expressao       go to state 101
    expOr           go to state 58
    expAnd          go to state 59
    expCmp          go to state 60
    expAdd          go to state 61
    expMult         go to state 62
    expUnaria       go to state 63
    expressao_base  go to state 64


state 122

   32 comando: TK_IF expressao bloco TK_ELSE bloco .

    $default  reduce using rule 32 (comando)


state 123

   69 expressao_base: TK_NEW tipo '[' expressao ']' .

    $default  reduce using rule 69 (expressao_base)


state 124

   40 lista_exp: expressao ',' lista_exp .

    $default  reduce using rule 40 (lista_exp)
